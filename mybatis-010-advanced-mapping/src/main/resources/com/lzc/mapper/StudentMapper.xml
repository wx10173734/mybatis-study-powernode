<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lzc.mapper.StudentMapper">


    <!--多对一的第一种方式，一条sql语句，级联属性映射-->
    <resultMap id="studentResultMap" type="com.lzc.pojo.Student">
        <id property="sid" column="sid"/>
        <result property="sname" column="sname"/>
        <result property="clazz.cid" column="cid"/>
        <result property="clazz.cname" column="cname"/>

    </resultMap>
    <select id="selectById" resultMap="studentResultMap">
        select s.sid, s.sname, c.cid, c.cname
        from t_stu s
                 left join t_clazz c on s.cid = c.cid
        where sid = #{sid}
    </select>


    <resultMap id="studentResultMapByAssociation" type="com.lzc.pojo.Student">
        <id property="sid" column="sid"/>
        <result property="sname" column="sname"/>
        <association property="clazz" javaType="com.lzc.pojo.Clazz">
            <!--
            association:翻译为关联。个 Student对 象关联一个CLazz对象
            property:提供要映射的P0J0类的属性名。
            javaType:用来指定要映射的java类型。
            -->
            <id property="cid" column="cid"/>
            <result property="cname" column="cname"/>
        </association>
    </resultMap>
    <select id="selectByAssociation" resultMap="studentResultMapByAssociation">
        select s.sid, s.sname, c.cid, c.cname
        from t_stu s
                 left join t_clazz c on s.cid = c.cid
        where sid = #{sid}
    </select>


    <!--两条sql语句，完成多对1的分布查询-->
    <!--这里是第一步，根据学生id查询所有的学生信息，这些信息当中含有班级id(cid)-->
    <!--
    分步查询的优点:
    第一:复用性增强。可以重复利用。(大步拆成N多个小碎步。每一-个小碎步更加可以重复利用。)
    第二:采用这种分步查询，可以充分利用他们的延迟加载/懒加载机制。
    什么是延迟加载(懒加载)，有什么用?
    延迟加载的核心原理是:用的时候再执行查询语句。不用的时候不查询。
    作用:提高性能。 尽可能不查，或尽可能少查，提高效率
        在mybatis当中怎么开启延迟加载呢?
        association标签中添加fetchType="Lazy"
        注意:默认情况下是没有开启延迟加载的。需要设置: fetchType= "Lazy"
        这种在association标签中配置fetchType="LazyI,是局部的设置，只对当前的association关联的sqL语句起作用。
        在实际的开发中，大部分都是需要使用延迟加载的，所以建议开启全部的延迟加载机制:
    -->
    <resultMap id="studentResultMapByStep" type="com.lzc.pojo.Student">
        <id property="sid" column="sid"/>
        <result property="sname" column="sname"/>
        <association property="clazz" select="com.lzc.mapper.ClazzMapper.selectByIdStep2" column="cid"/>
    </resultMap>
    <select id="selectByStep1" resultMap="studentResultMapByStep">
        select sid, sname, cid
        from t_stu
        where sid = #{sid}
    </select>
    <select id="selectByStep2" resultType="com.lzc.pojo.Student">
        select sid, sname, cid from t_stu where cid = #{cid}
    </select>

</mapper>
